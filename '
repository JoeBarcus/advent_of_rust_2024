use std::fs::read_to_string;

fn main() {
    let data = read_data("src/input.txt");
    let (left, right) = create_vecs(data);
    println!("{:?}", left);
    println!("{:?}", right);
}

fn create_vecs(data: Vec<String>) -> (Vec<String>, Vec<String>) {
    let mut left = Vec::new();
    let mut right = Vec::new();

    for (_, val) in data.iter().enumerate() {
        let parts: Vec<&str> = val.splitn(2, "   ").collect();
        if let [key, value] = parts[..] {
            left.push(key.to_string());
            right.push(value.to_string());
        }
    }
    (left, right)
}

fn read_data(path: &str) -> Vec<String> {
    read_to_string(path)
        .unwrap() // panic on possible file-reading errors
        .lines() // split the string into an iterator of string slices
        .map(String::from) // make each slice into a string
        .collect() // gather them together into a vector
}

